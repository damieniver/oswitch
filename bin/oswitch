#!/usr/bin/env ruby

require 'oswitch'
require 'optparse'

options = {}
collect = lambda do |key|
  lambda do |value|
    options[key] = value
  end
end

optspec = OptionParser.new do |opts|
  opts.banner = "Usage: oswitch [options] <package> [cmd]"

  opts.on '-l', '--list',
          'List packages.',
          &collect[:list]

  opts.on '-h', '--help',
          'Print help.',
          &collect[:help]
end

begin
  optspec.order!
rescue OptionParser::InvalidOption,
       OptionParser::MissingArgument => e
  puts e
  exit
end

if options[:help] || (options.empty? && ARGV.empty?)
  puts optspec
  exit
end

if options[:list]
  puts OSwitch.packages
  if OSwitch.packages.empty?
    puts "Nothing installed. Use anything from http://registry.hub.docker.com\n" +
         "Some examples: oswitch ubuntu\n" +
         "               oswitch yeban/biolinux:8\n" +
         "               oswitch centos\n" +
         "               oswitch nucleotides/sga"
  end
  exit
end

pattern = ARGV[0].strip
command = ARGV[1..-1].join(' ')
matches = OSwitch.packages.grep(/#{pattern}/)

if matches.length > 1
  puts "Which one of the following did you mean?"
  puts matches.join(', ')
else
  OSwitch.to(matches.first ||  pattern, command)
end
